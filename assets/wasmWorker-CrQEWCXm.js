(function(){"use strict";async function he(v={}){var P,r=v,R=self.location.href,b="";function U(e){return r.locateFile?r.locateFile(e,b):b+e}var S;{try{b=new URL(".",R).href}catch{}if(!(typeof window=="object"||typeof WorkerGlobalScope<"u"))throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");S=async e=>{a(!w(e),"readAsync does not work with file:// URLs");var t=await fetch(e,{credentials:"same-origin"});if(t.ok)return t.arrayBuffer();throw new Error(t.status+" : "+t.url)}}var W=console.log.bind(console),u=console.error.bind(console);a(!0,"worker environment detected but not enabled at build time.  Add `worker` to `-sENVIRONMENT` to enable."),a(!0,"node environment detected but not enabled at build time.  Add `node` to `-sENVIRONMENT` to enable."),a(!0,"shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.");var T;typeof WebAssembly!="object"&&u("no native wasm support detected");var C=!1;function a(e,t){e||m("Assertion failed"+(t?": "+t:""))}var w=e=>e.startsWith("file://");function N(){var e=$();a((e&3)==0),e==0&&(e+=4),_[e>>2]=34821223,L(34821223),_[e+4>>2]=2310721022,L(2310721022),_[0]=1668509029,L(1668509029)}function A(){if(!C){var e=$();e==0&&(e+=4);var t=_[e>>2],n=_[e+4>>2];(t!=34821223||n!=2310721022)&&m(`Stack overflow! Stack cookie has been overwritten at ${k(e)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${k(n)} ${k(t)}`),_[0]!=1668509029&&m("Runtime error: The application has corrupted its heap memory area (address zero)!")}}function we(...e){console.warn(...e)}(()=>{var e=new Int16Array(1),t=new Int8Array(e.buffer);e[0]=25459,(t[0]!==115||t[1]!==99)&&m("Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)")})();function H(e){Object.getOwnPropertyDescriptor(r,e)||Object.defineProperty(r,e,{configurable:!0,set(){m(`Attempt to set \`Module.${e}\` after it has already been processed.  This can happen, for example, when code is injected via '--post-js' rather than '--pre-js'`)}})}function f(e){return()=>a(!1,`call to '${e}' via reference taken before Wasm module initialization`)}function ke(e){Object.getOwnPropertyDescriptor(r,e)&&m(`\`Module.${e}\` was supplied but \`${e}\` not included in INCOMING_MODULE_JS_API`)}function Ee(e){return e==="FS_createPath"||e==="FS_createDataFile"||e==="FS_createPreloadedFile"||e==="FS_preloadFile"||e==="FS_unlink"||e==="addRunDependency"||e==="FS_createLazyFile"||e==="FS_createDevice"||e==="removeRunDependency"}function Te(e){te(e)}function te(e){Object.getOwnPropertyDescriptor(r,e)||Object.defineProperty(r,e,{configurable:!0,get(){var t=`'${e}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;Ee(e)&&(t+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),m(t)}})}var Ae=2**8-1,Ie=2**16-1,Me=2**32-1,Pe=2**64-1,Re=-128,Ce=-32768,Ne=-2147483648,Ue=-9223372036854776e3;function G(e,t,n,i){a(Number.isInteger(Number(e)),`attempt to write non-integer (${e}) into integer heap`),a(e<=i,`value (${e}) too large to write as ${t}-bit value`),a(e>=n,`value (${e}) too small to write as ${t}-bit value`)}var j=e=>G(e,8,Re,Ae),Le=e=>G(e,16,Ce,Ie),L=e=>G(e,32,Ne,Me),Oe=e=>G(e,64,Ue,Pe),re,ne,O,F,D,V,Y,_,J,K,X,z=!1;function ae(){var e=O.buffer;F=new Int8Array(e),V=new Int16Array(e),r.HEAPU8=D=new Uint8Array(e),Y=new Int32Array(e),_=new Uint32Array(e),J=new Float32Array(e),K=new Float64Array(e),X=new BigInt64Array(e),new BigUint64Array(e)}a(typeof Int32Array<"u"&&typeof Float64Array<"u"&&Int32Array.prototype.subarray!=null&&Int32Array.prototype.set!=null,"JS engine does not provide full typed array support");function De(){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;)Je(r.preRun.shift());H("preRun"),ie(se)}function xe(){a(!z),z=!0,Xe(),A(),I.__wasm_call_ctors()}function $e(){if(A(),r.postRun)for(typeof r.postRun=="function"&&(r.postRun=[r.postRun]);r.postRun.length;)Ye(r.postRun.shift());H("postRun"),ie(oe)}function m(e){r.onAbort?.(e),e="Aborted("+e+")",u(e),C=!0;var t=new WebAssembly.RuntimeError(e);throw ne?.(t),t}var p={error(){m("Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM")},init(){p.error()},createDataFile(){p.error()},createPreloadedFile(){p.error()},createLazyFile(){p.error()},open(){p.error()},mkdev(){p.error()},registerDevice(){p.error()},analyzePath(){p.error()},ErrnoError(){p.error()}};function y(e,t){return(...n)=>{a(z,`native function \`${e}\` called before runtime initialization`),a(!0,`native function \`${e}\` called after runtime exit (use NO_EXIT_RUNTIME to keep it alive after main() exits)`);var i=I[e];return a(i,`exported native function \`${e}\` not found`),a(n.length<=t,`native function \`${e}\` called with ${n.length} args but expects ${t}`),i(...n)}}var q;function Be(){return r.locateFile?U("index.wasm"):new URL("/Img2Num/assets/index-ByoQd17E.wasm",self.location.href).href}function We(e){if(e==q&&T)return new Uint8Array(T);throw"both async and sync fetching of the wasm failed"}async function He(e){if(!T)try{var t=await S(e);return new Uint8Array(t)}catch{}return We(e)}async function Ge(e,t){try{var n=await He(e),i=await WebAssembly.instantiate(n,t);return i}catch(l){u(`failed to asynchronously prepare wasm: ${l}`),w(e)&&u(`warning: Loading from a file URI (${e}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`),m(l)}}async function je(e,t,n){if(!e)try{var i=fetch(t,{credentials:"same-origin"}),l=await WebAssembly.instantiateStreaming(i,n);return l}catch(c){u(`wasm streaming compile failed: ${c}`),u("falling back to ArrayBuffer instantiation")}return Ge(t,n)}function ze(){return{env:Fe,wasi_snapshot_preview1:Fe}}async function Ve(){function e(o,s){return I=o.exports,O=I.memory,a(O,"memory not found in wasm exports"),ae(),Tt(I),I}var t=r;function n(o){return a(r===t,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"),t=null,e(o.instance)}var i=ze();if(r.instantiateWasm)return new Promise((o,s)=>{try{r.instantiateWasm(i,(d,h)=>{o(e(d,h))})}catch(d){u(`Module.instantiateWasm callback failed with error: ${d}`),s(d)}});q??=Be();var l=await je(T,q,i),c=n(l);return c}var ie=e=>{for(;e.length>0;)e.shift()(r)},oe=[],Ye=e=>oe.push(e),se=[],Je=e=>se.push(e);function Ke(e,t="i8"){switch(t.endsWith("*")&&(t="*"),t){case"i1":return F[e];case"i8":return F[e];case"i16":return V[e>>1];case"i32":return Y[e>>2];case"i64":return X[e>>3];case"float":return J[e>>2];case"double":return K[e>>3];case"*":return _[e>>2];default:m(`invalid type for getValue: ${t}`)}}var k=e=>(a(typeof e=="number"),e>>>=0,"0x"+e.toString(16).padStart(8,"0")),Xe=()=>{var e=Z(),t=$();Se(e,t)};function qe(e,t,n="i8"){switch(n.endsWith("*")&&(n="*"),n){case"i1":F[e]=t,j(t);break;case"i8":F[e]=t,j(t);break;case"i16":V[e>>1]=t,Le(t);break;case"i32":Y[e>>2]=t,L(t);break;case"i64":X[e>>3]=BigInt(t),Oe(t);break;case"float":J[e>>2]=t;break;case"double":K[e>>3]=t;break;case"*":_[e>>2]=t;break;default:m(`invalid type for setValue: ${n}`)}}var Ze=e=>me(e),Qe=()=>pe(),x=e=>{x.shown||={},x.shown[e]||(x.shown[e]=1,u(e))};class et{constructor(t){this.excPtr=t,this.ptr=t-24}set_type(t){_[this.ptr+4>>2]=t}get_type(){return _[this.ptr+4>>2]}set_destructor(t){_[this.ptr+8>>2]=t}get_destructor(){return _[this.ptr+8>>2]}set_caught(t){t=t?1:0,F[this.ptr+12]=t,j(t)}get_caught(){return F[this.ptr+12]!=0}set_rethrown(t){t=t?1:0,F[this.ptr+13]=t,j(t)}get_rethrown(){return F[this.ptr+13]!=0}init(t,n){this.set_adjusted_ptr(0),this.set_type(t),this.set_destructor(n)}set_adjusted_ptr(t){_[this.ptr+16>>2]=t}get_adjusted_ptr(){return _[this.ptr+16>>2]}}var tt=(e,t,n)=>{var i=new et(e);i.init(t,n),a(!1,"Exception thrown, but exception catching is not enabled. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.")},rt=e=>{var t=Z(),n=$();m(`stack overflow (Attempt to set SP to ${k(e)}, with stack limits [${k(n)} - ${k(t)}]). If you require more stack space build with -sSTACK_SIZE=<bytes>`)},nt=()=>m("native code called abort()"),at=()=>Date.now(),le=()=>performance.now(),it=()=>2147483648,ot=(e,t)=>(a(t,"alignment argument is required"),Math.ceil(e/t)*t),st=e=>{var t=O.buffer.byteLength,n=(e-t+65535)/65536|0;try{return O.grow(n),ae(),1}catch(i){u(`growMemory: Attempted to grow heap from ${t} bytes to ${e} bytes, but got error: ${i}`)}},lt=e=>{var t=D.length;e>>>=0,a(e>t);var n=it();if(e>n)return u(`Cannot enlarge memory, requested ${e} bytes, but the limit is ${n} bytes!`),!1;for(var i=1;i<=4;i*=2){var l=t*(1+.2/i);l=Math.min(l,e+100663296);var c=Math.min(n,ot(Math.max(e,l),65536)),o=le(),s=st(c),d=le();if(we(`Heap resize call from ${t} to ${c} took ${d-o} msecs. Success: ${!!s}`),s)return!0}return u(`Failed to grow the heap from ${t} bytes to ${c} bytes, not enough memory!`),!1},ce=typeof TextDecoder<"u"?new TextDecoder:void 0,ct=(e,t,n,i)=>{for(var l=t+n;e[t]&&!(t>=l);)++t;return t},_e=(e,t=0,n,i)=>{var l=ct(e,t,n);if(l-t>16&&e.buffer&&ce)return ce.decode(e.subarray(t,l));for(var c="";t<l;){var o=e[t++];if(!(o&128)){c+=String.fromCharCode(o);continue}var s=e[t++]&63;if((o&224)==192){c+=String.fromCharCode((o&31)<<6|s);continue}var d=e[t++]&63;if((o&240)==224?o=(o&15)<<12|s<<6|d:((o&248)!=240&&x("Invalid UTF-8 leading byte "+k(o)+" encountered when deserializing a UTF-8 string in wasm memory to a JS string!"),o=(o&7)<<18|s<<12|d<<6|e[t++]&63),o<65536)c+=String.fromCharCode(o);else{var h=o-65536;c+=String.fromCharCode(55296|h>>10,56320|h&1023)}}return c},_t=(e,t,n)=>(a(typeof e=="number",`UTF8ToString expects a number (got ${typeof e})`),e?_e(D,e,t):""),dt=e=>{m("fd_close called without SYSCALLS_REQUIRE_FILESYSTEM")};function ut(e,t,n,i){return 70}var ft=[null,[],[]],mt=(e,t)=>{var n=ft[e];a(n),t===0||t===10?((e===1?W:u)(_e(n)),n.length=0):n.push(t)},gt=(e,t,n,i)=>{for(var l=0,c=0;c<n;c++){var o=_[t>>2],s=_[t+4>>2];t+=8;for(var d=0;d<s;d++)mt(e,D[o+d]);l+=s}return _[i>>2]=l,L(l),0},pt=e=>{var t=r["_"+e];return a(t,"Cannot call unknown function "+e+", make sure it is exported"),t},St=(e,t)=>{a(e.length>=0,"writeArrayToMemory array must have a length (should be an array or typed array)"),F.set(e,t)},Ft=e=>{for(var t=0,n=0;n<e.length;++n){var i=e.charCodeAt(n);i<=127?t++:i<=2047?t+=2:i>=55296&&i<=57343?(t+=4,++n):t+=3}return t},vt=(e,t,n,i)=>{if(a(typeof e=="string",`stringToUTF8Array expects a string (got ${typeof e})`),!(i>0))return 0;for(var l=n,c=n+i-1,o=0;o<e.length;++o){var s=e.codePointAt(o);if(s<=127){if(n>=c)break;t[n++]=s}else if(s<=2047){if(n+1>=c)break;t[n++]=192|s>>6,t[n++]=128|s&63}else if(s<=65535){if(n+2>=c)break;t[n++]=224|s>>12,t[n++]=128|s>>6&63,t[n++]=128|s&63}else{if(n+3>=c)break;s>1114111&&x("Invalid Unicode code point "+k(s)+" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF)."),t[n++]=240|s>>18,t[n++]=128|s>>12&63,t[n++]=128|s>>6&63,t[n++]=128|s&63,o++}}return t[n]=0,n-l},yt=(e,t,n)=>(a(typeof n=="number","stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),vt(e,D,t,n)),de=e=>ge(e),ht=e=>{var t=Ft(e)+1,n=de(t);return yt(e,n,t),n},ue=(e,t,n,i,l)=>{var c={string:g=>{var B=0;return g!=null&&g!==0&&(B=ht(g)),B},array:g=>{var B=de(g.length);return St(g,B),B}};function o(g){return t==="string"?_t(g):t==="boolean"?!!g:g}var s=pt(e),d=[],h=0;if(a(t!=="array",'Return type should not be "array".'),i)for(var M=0;M<i.length;M++){var ye=c[n[M]];ye?(h===0&&(h=Qe()),d[M]=ye(i[M])):d[M]=i[M]}var Q=s(...d);function Mt(g){return h!==0&&Ze(h),o(g)}return Q=Mt(Q),Q},bt=(e,t,n,i)=>(...l)=>ue(e,t,n,l);{if(r.noExitRuntime&&r.noExitRuntime,r.print&&(W=r.print),r.printErr&&(u=r.printErr),r.wasmBinary&&(T=r.wasmBinary),r.FS_createDataFile=p.createDataFile,r.FS_createPreloadedFile=p.createPreloadedFile,Et(),r.arguments&&r.arguments,r.thisProgram&&r.thisProgram,a(typeof r.memoryInitializerPrefixURL>"u","Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"),a(typeof r.pthreadMainPrefixURL>"u","Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"),a(typeof r.cdInitializerPrefixURL>"u","Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"),a(typeof r.filePackagePrefixURL>"u","Module.filePackagePrefixURL option was removed, use Module.locateFile instead"),a(typeof r.read>"u","Module.read option was removed"),a(typeof r.readAsync>"u","Module.readAsync option was removed (modify readAsync in JS)"),a(typeof r.readBinary>"u","Module.readBinary option was removed (modify readBinary in JS)"),a(typeof r.setWindowTitle>"u","Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)"),a(typeof r.TOTAL_MEMORY>"u","Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY"),a(typeof r.ENVIRONMENT>"u","Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)"),a(typeof r.STACK_SIZE>"u","STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time"),a(typeof r.wasmMemory>"u","Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally"),a(typeof r.INITIAL_MEMORY>"u","Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically"),r.preInit)for(typeof r.preInit=="function"&&(r.preInit=[r.preInit]);r.preInit.length>0;)r.preInit.shift()();H("preInit")}r.ccall=ue,r.cwrap=bt,r.setValue=qe,r.getValue=Ke;var wt=["writeI53ToI64","writeI53ToI64Clamped","writeI53ToI64Signaling","writeI53ToU64Clamped","writeI53ToU64Signaling","readI53FromI64","readI53FromU64","convertI32PairToI53","convertI32PairToI53Checked","convertU32PairToI53","getTempRet0","setTempRet0","zeroMemory","exitJS","withStackSave","strError","inetPton4","inetNtop4","inetPton6","inetNtop6","readSockaddr","writeSockaddr","readEmAsmArgs","jstoi_q","getExecutableName","autoResumeAudioContext","getDynCaller","dynCall","handleException","keepRuntimeAlive","runtimeKeepalivePush","runtimeKeepalivePop","callUserCallback","maybeExit","asyncLoad","asmjsMangle","mmapAlloc","HandleAllocator","getNativeTypeSize","getUniqueRunDependency","addRunDependency","removeRunDependency","addOnInit","addOnPostCtor","addOnPreMain","addOnExit","STACK_SIZE","STACK_ALIGN","POINTER_SIZE","ASSERTIONS","convertJsFunctionToWasm","getEmptyTableSlot","updateTableMap","getFunctionAddress","addFunction","removeFunction","intArrayFromString","intArrayToString","AsciiToString","stringToAscii","UTF16ToString","stringToUTF16","lengthBytesUTF16","UTF32ToString","stringToUTF32","lengthBytesUTF32","stringToNewUTF8","registerKeyEventCallback","maybeCStringToJsString","findEventTarget","getBoundingClientRect","fillMouseEventData","registerMouseEventCallback","registerWheelEventCallback","registerUiEventCallback","registerFocusEventCallback","fillDeviceOrientationEventData","registerDeviceOrientationEventCallback","fillDeviceMotionEventData","registerDeviceMotionEventCallback","screenOrientation","fillOrientationChangeEventData","registerOrientationChangeEventCallback","fillFullscreenChangeEventData","registerFullscreenChangeEventCallback","JSEvents_requestFullscreen","JSEvents_resizeCanvasForFullscreen","registerRestoreOldStyle","hideEverythingExceptGivenElement","restoreHiddenElements","setLetterbox","softFullscreenResizeWebGLRenderTarget","doRequestFullscreen","fillPointerlockChangeEventData","registerPointerlockChangeEventCallback","registerPointerlockErrorEventCallback","requestPointerLock","fillVisibilityChangeEventData","registerVisibilityChangeEventCallback","registerTouchEventCallback","fillGamepadEventData","registerGamepadEventCallback","registerBeforeUnloadEventCallback","fillBatteryEventData","registerBatteryEventCallback","setCanvasElementSize","getCanvasElementSize","jsStackTrace","getCallstack","convertPCtoSourceLocation","getEnvStrings","checkWasiClock","wasiRightsToMuslOFlags","wasiOFlagsToMuslOFlags","initRandomFill","randomFill","safeSetTimeout","setImmediateWrapped","safeRequestAnimationFrame","clearImmediateWrapped","registerPostMainLoop","registerPreMainLoop","getPromise","makePromise","idsToPromises","makePromiseCallback","findMatchingCatch","Browser_asyncPrepareDataCounter","isLeapYear","ydayFromDate","arraySum","addDays","getSocketFromFD","getSocketAddress","FS_createPreloadedFile","FS_preloadFile","FS_modeStringToFlags","FS_getMode","FS_stdin_getChar","FS_mkdirTree","_setNetworkCallback","heapObjectForWebGLType","toTypedArrayIndex","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","webgl_enable_WEBGL_multi_draw","webgl_enable_EXT_polygon_offset_clamp","webgl_enable_EXT_clip_control","webgl_enable_WEBGL_polygon_mode","emscriptenWebGLGet","computeUnpackAlignedImageSize","colorChannelsInGlTextureFormat","emscriptenWebGLGetTexPixelData","emscriptenWebGLGetUniform","webglGetUniformLocation","webglPrepareUniformLocationsBeforeFirstUse","webglGetLeftBracePos","emscriptenWebGLGetVertexAttrib","__glGetActiveAttribOrUniform","writeGLArray","registerWebGlEventCallback","runAndAbortIfError","ALLOC_NORMAL","ALLOC_STACK","allocate","writeStringToMemory","writeAsciiToMemory","demangle","stackTrace"];wt.forEach(Te);var kt=["run","out","err","callMain","abort","wasmMemory","wasmExports","HEAPF32","HEAPF64","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAP64","HEAPU64","writeStackCookie","checkStackCookie","INT53_MAX","INT53_MIN","bigintToI53Checked","stackSave","stackRestore","stackAlloc","ptrToString","getHeapMax","growMemory","ENV","setStackLimits","ERRNO_CODES","DNS","Protocols","Sockets","timers","warnOnce","readEmAsmArgsArray","alignMemory","wasmTable","noExitRuntime","addOnPreRun","addOnPostRun","freeTableIndexes","functionsInTableMap","PATH","PATH_FS","UTF8Decoder","UTF8ArrayToString","UTF8ToString","stringToUTF8Array","stringToUTF8","lengthBytesUTF8","UTF16Decoder","stringToUTF8OnStack","writeArrayToMemory","JSEvents","specialHTMLTargets","findCanvasEventTarget","currentFullscreenStrategy","restoreOldWindowedStyle","UNWIND_CACHE","ExitStatus","flush_NO_FILESYSTEM","emSetImmediate","emClearImmediate_deps","emClearImmediate","promiseMap","uncaughtExceptionCount","exceptionLast","exceptionCaught","ExceptionInfo","Browser","requestFullscreen","requestFullScreen","setCanvasSize","getUserMedia","createContext","getPreloadedImageData__data","wget","MONTH_DAYS_REGULAR","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR_CUMULATIVE","MONTH_DAYS_LEAP_CUMULATIVE","SYSCALLS","preloadPlugins","FS_stdin_getChar_buffer","FS_unlink","FS_createPath","FS_createDevice","FS_readFile","FS","FS_root","FS_mounts","FS_devices","FS_streams","FS_nextInode","FS_nameTable","FS_currentPath","FS_initialized","FS_ignorePermissions","FS_filesystems","FS_syncFSRequests","FS_readFiles","FS_lookupPath","FS_getPath","FS_hashName","FS_hashAddNode","FS_hashRemoveNode","FS_lookupNode","FS_createNode","FS_destroyNode","FS_isRoot","FS_isMountpoint","FS_isFile","FS_isDir","FS_isLink","FS_isChrdev","FS_isBlkdev","FS_isFIFO","FS_isSocket","FS_flagsToPermissionString","FS_nodePermissions","FS_mayLookup","FS_mayCreate","FS_mayDelete","FS_mayOpen","FS_checkOpExists","FS_nextfd","FS_getStreamChecked","FS_getStream","FS_createStream","FS_closeStream","FS_dupStream","FS_doSetAttr","FS_chrdev_stream_ops","FS_major","FS_minor","FS_makedev","FS_registerDevice","FS_getDevice","FS_getMounts","FS_syncfs","FS_mount","FS_unmount","FS_lookup","FS_mknod","FS_statfs","FS_statfsStream","FS_statfsNode","FS_create","FS_mkdir","FS_mkdev","FS_symlink","FS_rename","FS_rmdir","FS_readdir","FS_readlink","FS_stat","FS_fstat","FS_lstat","FS_doChmod","FS_chmod","FS_lchmod","FS_fchmod","FS_doChown","FS_chown","FS_lchown","FS_fchown","FS_doTruncate","FS_truncate","FS_ftruncate","FS_utime","FS_open","FS_close","FS_isClosed","FS_llseek","FS_read","FS_write","FS_mmap","FS_msync","FS_ioctl","FS_writeFile","FS_cwd","FS_chdir","FS_createDefaultDirectories","FS_createDefaultDevices","FS_createSpecialDirectories","FS_createStandardStreams","FS_staticInit","FS_init","FS_quit","FS_findObject","FS_analyzePath","FS_createFile","FS_createDataFile","FS_forceLoadFile","FS_createLazyFile","FS_absolutePath","FS_createFolder","FS_createLink","FS_joinPath","FS_mmapAlloc","FS_standardizePath","MEMFS","TTY","PIPEFS","SOCKFS","tempFixedLengthArray","miniTempWebGLFloatBuffers","miniTempWebGLIntBuffers","GL","AL","GLUT","EGL","GLEW","IDBStore","SDL","SDL_gfx","allocateUTF8","allocateUTF8OnStack","print","printErr","jstoi_s"];kt.forEach(te);function Et(){ke("fetchSettings")}r._gaussian_blur_fft=f("_gaussian_blur_fft"),r._invert_image=f("_invert_image"),r._threshold_image=f("_threshold_image"),r._black_threshold_image=f("_black_threshold_image"),r._kmeans_clustering=f("_kmeans_clustering"),r._kmeans_clustering_spatial=f("_kmeans_clustering_spatial"),r._malloc=f("_malloc"),r._free=f("_free");var fe=f("_emscripten_stack_init"),Z=f("_emscripten_stack_get_base"),$=f("_emscripten_stack_get_end"),me=f("__emscripten_stack_restore"),ge=f("__emscripten_stack_alloc"),pe=f("_emscripten_stack_get_current"),Se=r.___set_stack_limits=f("___set_stack_limits");function Tt(e){r._gaussian_blur_fft=y("gaussian_blur_fft",4),r._invert_image=y("invert_image",3),r._threshold_image=y("threshold_image",4),r._black_threshold_image=y("black_threshold_image",4),r._kmeans_clustering=y("kmeans_clustering",5),r._kmeans_clustering_spatial=y("kmeans_clustering_spatial",6),r._malloc=y("malloc",1),r._free=y("free",1),fe=e.emscripten_stack_init,e.emscripten_stack_get_free,Z=e.emscripten_stack_get_base,$=e.emscripten_stack_get_end,me=e._emscripten_stack_restore,ge=e._emscripten_stack_alloc,pe=e.emscripten_stack_get_current,r.___set_stack_limits=Se=y("__set_stack_limits",2)}var Fe={__cxa_throw:tt,__handle_stack_overflow:rt,_abort_js:nt,emscripten_date_now:at,emscripten_resize_heap:lt,fd_close:dt,fd_seek:ut,fd_write:gt},ve;function At(){fe(),N()}function It(){At(),De();function e(){a(!ve),ve=!0,r.calledRun=!0,!C&&(xe(),re?.(r),r.onRuntimeInitialized?.(),H("onRuntimeInitialized"),a(!r._main,'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]'),$e())}r.setStatus?(r.setStatus("Running..."),setTimeout(()=>{setTimeout(()=>r.setStatus(""),1),e()},1)):e(),A()}var I;I=await Ve(),It(),z?P=r:P=new Promise((e,t)=>{re=e,ne=t});for(const e of Object.keys(r))e in v||Object.defineProperty(v,e,{configurable:!0,get(){m(`Access to module property ('${e}') is no longer possible via the module constructor argument; Instead, use the result of the module constructor.`)}});return P}let E,ee;const be=new Promise(v=>ee=v);he().then(v=>{E=v,ee()}),self.onmessage=async({data:v})=>{await be;const{id:P,funcName:r,args:R,bufferKeys:b}=v,U={};try{if(b)for(const a of b){const w=R[a],N=w.length,A=E._malloc(N);E.HEAPU8.set(w,A),U[a]={ptr:A,size:N},R[a]=A}const S=`_${r}`;if(typeof E[S]!="function")throw new Error(`WASM export not found: ${S}`);const W=E[S],u=r&&R?Object.values(R):[],T=W(...u),C={};if(b)for(const a of b){const{ptr:w,size:N}=U[a];C[a]=new Uint8ClampedArray(E.HEAPU8.subarray(w,w+N))}self.postMessage({id:P,output:C,returnValue:T})}catch(S){self.postMessage({id:P,error:S.message})}finally{for(const{ptr:S}of Object.values(U))E._free(S)}}})();
